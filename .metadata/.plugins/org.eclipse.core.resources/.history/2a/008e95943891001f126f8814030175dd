package fr.eni.quelmedecin.bo;

import java.util.Comparator;

import fr.eni.quelmedecin.exception.UtilisateurException;

public abstract class Personne {
	private String nom;
	private String prenom;
	private String telephone;
	private Adresse adresse;
	public static Comparator<Personne> comparatorNomPrenomCroissant = new Comparator<Personne>() {
		public int compare(Personne p1, Personne p2) {
			// TODO Auto-generated method stub
			int compare = p1.getNom().compareTo(p2.getNom());
			if (compare != 0)
				return compare;
			else
				return p1.getPrenom().compareTo(p2.getPrenom());
		}
	};

	public Personne(String nom, String prenom, String telephone, Adresse adresse) throws UtilisateurException {
		setNom(nom);
		this.prenom = prenom;
		this.telephone = telephone;
		this.adresse = adresse;
	}

//	public void afficher() {
//		System.out.println(nom.toUpperCase() + " " + prenom);
//		System.out.println("Téléphone : " + telephone);
//		System.out.println("Adresse :");
//		getAdresse().afficher();
//	}
	@Override
	public String toString() {
		String afficher = getNom() + " " + getPrenom() + "\n";
		afficher += "Téléphone : " + getTelephone() + "\n";
		afficher += "Adresse : " + getAdresse().toString() + "\n";
		return afficher;
	}

	public String getNom() {
		return nom.toUpperCase();
	}

	public void setNom(String nom) throws UtilisateurException {
		if (nom == null)
			throw new UtilisateurException("Le nom est obligatoire");
		if (nom.length() < 1)
			throw new UtilisateurException("Le nom doit comporter plus de 1 caractère");
		if (nom.length() > 2)
			throw new UtilisateurException("Le nom doit comporter moins de 100 caractère");
		this.nom = nom;
	}

	public String getPrenom() {
		return prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	public String getTelephone() {
		return telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	public Adresse getAdresse() {
		return adresse;
	}

	public void setAdresse(Adresse adresse) {
		this.adresse = adresse;
	}

	public Comparator<Personne> getComparatorNomPrenomCroissant() {
		return comparatorNomPrenomCroissant;
	}

}
